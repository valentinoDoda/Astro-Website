---
interface Props {
  process: [title: string, description: string][];
}
const { process } = Astro.props;
---

<div class="process_steps">
  {
    process.map((p, index) => {
      return (
        <div class="process_step">
          <div class="title">
            <p>{p[0]}</p>
          </div>
          <div class="bar" data-content={index + 1} />
          <div class="description">
            <p>{p[1]}</p>
          </div>
        </div>
      );
    })
  }
</div>
<style>
  .process_steps {
    margin-top: 11rem;
  }
  .process_step {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    justify-items: center;
  }
  .title {
    margin-top: -2.8rem;
    padding: 0px 2.5rem;
  }
  .title p {
    font-weight: bold;
    color: var(--title-color);
    font-family: var(--heading-font);
    font-size: 1.5rem;
  }
  .description {
    padding: 0.5rem 2.5rem;
  }
  .description p {
    font-size: 1.2rem;
  }
  .bar {
    position: relative;
    width: 2.5rem;
    height: 100vh;
    margin: 0px 10px;
    background: linear-gradient(
      rgba(255, 255, 255, 0) 0%,
      rgba(252, 211, 77, 0.3) 25%,
      rgba(252, 211, 77, 0.6) 40%,
      rgba(252, 211, 77, 0.7) 50%,
      rgba(252, 211, 77, 0.6) 60%,
      rgba(252, 211, 77, 0.3) 75%,
      rgba(255, 255, 255, 0) 100%
    );
  }
  .bar::after {
    font-family: var(--logo-font);
    box-shadow: 0px 0px 12px var(--main-bg);
    font-weight: bold;
    color: rgb(255, 255, 255);
    background-color: rgb(173, 146, 66);
    position: absolute;
    top: 0px;
    left: 50%;
    height: 2.5rem;
    width: 2.5rem;
    font-size: 2rem;
    content: attr(data-content);
    text-align: center;
    transform: translate(-50%, -100%);
    padding: 10px;
    border-radius: 50%;
  }
  .process_step:nth-child(2n) .title {
    order: 3;
  }
  .process_step:nth-child(2n) .description {
    order: 1;
  }
  .process_step:nth-child(2n) .bar {
    order: 2;
  }
  .process_step:last-child .bar {
    height: calc(100% + 100px);
  }
  .process_step:last-child {
    margin-bottom: 150px;
  }
  @media (max-width: 700px) {
    .process_step > * {
      order: 0 !important;
    }
    .process_step {
      grid-template-columns: auto 1fr !important;
      justify-items: start !important;
    }
    .process_step .bar {
      height: 100%;
      grid-column: 1;
      grid-row: 1 / span 2;
    }
    .process_step .description {
      padding-bottom: 100%;
    }
    .process_step:last-child .description {
      padding-bottom: 100px;
    }
  }
</style>
